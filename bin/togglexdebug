#!/bin/sh
S=$(bin/clinotty cat /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini | grep -iGc 'xdebug.mode=off');

xdebug_status() {
    if [[ $S == 1 ]]; then
        echo "Xdebug debug mode is disabled."
    else
        echo "Xdebug debug mode is enabled."
    fi
}

xdebug_toggle() {
    if [[ $S == 1 ]]; then
        xdebug_enable
    else
        xdebug_disable
    fi
}

xdebug_enable() {
    if [[ $S == 1 ]]; then
        bin/root sed -i -e 's/^xdebug.mode=off/xdebug.mode=debug,develop,profile/g' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
	sleep 1
        echo "Xdebug debug mode has been enabled."
    else
        echo "Xdebug debug mode is already enabled."
    fi
}

xdebug_disable() {
    if [[ $S == 0 ]]; then
        bin/root sed -i -e 's/^xdebug.mode=debug,develop,profile/xdebug.mode=off/g' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
        sleep 1
        echo "Xdebug debug mode has been disabled."
    else
        echo "Xdebug debug mode is already disabled."
    fi
}

reload_phpfpm() {
	PID=$(bin/clinotty ps -ef | grep fpm | grep master | awk '{print $1}')
	if [[ "" !=  "$PID" ]]; then
	  echo "Reloading FPM"
	  bin/root kill -USR2 "$PID"
	fi
}

firstArgLetter="$(echo "$1" | head -c 1)"

if [[ $firstArgLetter == "d" ]]; then
    xdebug_disable
    reload_phpfpm
elif [[ $firstArgLetter == "e" ]]; then
    xdebug_enable
    reload_phpfpm
elif [[ $firstArgLetter == "t" ]]; then
    xdebug_toggle
    reload_phpfpm
elif [[ $firstArgLetter == "s" ]]; then
    xdebug_status
else
    printf "Please specify either 'disable', 'enable', 'status' or 'toggle' as an argument.\nEx: bin/xdebug status\n"
fi
